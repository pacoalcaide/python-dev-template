{
    "name": "python-dev",
    //"image": "docker.io/pacoalcaide/python-dev-template:0.0.1",
    //"image": "pacoalcaide/python-dev_vscode-python-uv-template:0.0.1",
    "image": "${localEnv:IMAGE_DEV_NAME}",
    "customizations": {
        "vscode": {
            "settings": {
                "workbench.colorTheme": "Default High Contrast",
                "workbench.editor.showTabs": "multiple",
                //"python.defaultInterpreterPath": "/opt/python-3.12-dev/bin/python3",
                //"python.selectInterpreter": "/opt/python-3.12-dev/bin/python3"
                "python.defaultInterpreterPath": "/opt/python-${localEnv:PYTHON_VERSION}-dev/bin/python3",
                "python.selectInterpreter": "/opt/python-${localEnv:PYTHON_VERSION}-dev/bin/python3"
            },
            "extensions": [
                // Container
                "ms-azuretools.vscode-docker",
                "ms-vscode-remote.remote-containers",
                //Python
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                // HTML
                "ms-vscode.live-server",
                // Documents/Settings
                "yzhang.markdown-all-in-one",
                "quarto.quarto",
                "redhat.vscode-yaml",
                "ms-toolsai.jupyter",
                //"streetsidesoftware.code-spell-checker",
                "tamasfe.even-better-toml",
                "aaron-bond.better-comments",
                //Code
                "oderwat.indent-rainbow",
                // Data
                "mechatroner.rainbow-csv",
                "ms-toolsai.datawrangler",
                // Git
                "mhutchie.git-graph",
                // Misc
                "streetsidesoftware.code-spell-checker",
                // Code
                "continue.continue"

            ]
        }
    },
    // Optional, local bash history:
    //"mounts": [
    //    "source=${localEnv:HOME}/.zsh_history_dev,target=/root/.zsh_history,type=bind,consistency=cache"
    //],
    // Optional set environment variables:
    "remoteEnv": {
        "MY_VAR": "${localEnv:MY_VAR:test_var}"
    },
    // Optional load environment variables from a file:
    "runArgs": [
        "--env-file",
        ".devcontainer/devcontainer.env"
    ]
}